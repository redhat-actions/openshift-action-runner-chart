appName: actions-runner

runnerImage: quay.io/redhat-github-actions/runner
runnerTag: v1

# GitHub organization or user. Required.
# If githubRepository is set, this must be the organization or user who owns that repository.
githubOwner: ""
# GitHub repository to install runners to. Can be omitted for an organization-level runner.
githubRepository: ""
# If you're using GitHub Enterprise, enter your company domain here.
# eg. github.mycompany.com
githubDomain: ""

# The name of the k8s secret to create for github PAT auth
secretName: "github-pat"
# The name of the key that points to the data within the secret.
# Modify this to store multiple PATs in one secret.
secretKey: "github-pat"
# The PAT itself - must be set if the secret is being created.
githubPat: ""

# The name of the Github App k8s secret to create.
appSecretName: "github-app"
# The name of the key that points to the Github App ID
appIdSecretKey: "github-app-id"
# The name of the key that points to the Github App Install ID
appInstallIdSecretKey: "github-install-id"
# The name of the key that points to the Github App PEM
appPemSecretKey: "github-pem"
# The Github App Id itself - must be set for Github App Auth
githubAppId: ""
# The Github App Install Id itself - must be set for Github App Auth
githubAppInstallId: ""
# The Github App PEM itself - must be set for Github App Auth
githubAppPem: ""

# Pass labels using array syntax, which is curly braces surrounding comma-separated items.
# --set runnerLabels="{ label1, label2 }" results in the labels "label1" and "label2".
runnerLabels: []

# Add annotations to the deployment. This is easist with a values file but can be done on the command line with:
# --set annotations.<key>=<value> is equivalent to the values file:
# annotations:
#   key: value
annotations: {}

# Adjust replicas depending on your resources available,
# and how many jobs you want to run concurrently.
replicas: 1

serviceAccountName: default

# Adjust requests and limits depending on your resources,
# and how heavyweight your workloads are.
memoryRequest: "512Mi"
memoryLimit: "1Gi"
cpuRequest: "100m"
cpuLimit: "250m"

# Enable custom cluster PKI loading
# https://docs.openshift.com/container-platform/4.6/networking/configuring-a-custom-pki.html
clusterPKI: false

# You can inject arbitrary environment variables here:
runnerEnv:
    # - name: ENV_VAR
    #   value: env_value
    # or, through the command line:
    # --set runnerEnv[0].name="ENV_VAR" --set runnerEnv[0].value="env_value"

    ## Proxy Configuration Example:
    # - name: https_proxy
    #   value: http://proxy.example.com:9000
    # - name: http_proxy
    #   value: http://proxy.example.com:9000
    # - name: no_proxy
    #   value: localhost
