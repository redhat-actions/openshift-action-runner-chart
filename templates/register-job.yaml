{{- if .Values.githubRunnerToken }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    # https://helm.sh/docs/chart_best_practices/labels/
    app.kubernetes.io/component: job
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
  {{- if .Values.annotations }}
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}

spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: {{ .Release.Name }}-register

          {{- $taggedImage := printf "%s:%s" .Values.runnerImage .Values.runnerTag }}
          image: {{ $taggedImage }}
          env:
            - name: GITHUB_OWNER
              value: {{ required ".Values.githubOwner must be set." .Values.githubOwner }}
            - name: GITHUB_REPOSITORY
              value: {{ .Values.githubRepository }}
            - name: GITHUB_DOMAIN
              value: {{ .Values.githubDomain }}

            # The labels must be trimmed. The config script will stop reading labels if it encounters a space.
            - name: RUNNER_LABELS
              value: "{{ $taggedImage }},{{- range .Values.runnerLabels }}{{trim .}},{{- end }}"

            {{- if .Values.runnerGroup }}
            - name: RUNNER_GROUP
              value: {{ .Values.runnerGroup }}
            {{- end }}

            {{- if .Values.ephemeral }}
            - name: EPHEMERAL
              value: "{{ .Values.ephemeral }}"
            {{- end }}

            - name: RUNNER_TOKEN
              value: {{ .Values.githubRunnerToken | quote }}

          command:
            - bash
            - '-c'
            - './register.sh && cp -rT . /mnt'

          volumeMounts:
            {{- if .Values.clusterPKI }}
            - name: trusted-ca
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            {{- end }}
            {{- if .Values.githubRunnerToken }}
            - name: home-runner-pv
              mountPath: /mnt
            {{- end }}

      volumes:
        # Enable custom cluster PKI
        # https://docs.openshift.com/container-platform/4.6/networking/configuring-a-custom-pki.html
        {{- if .Values.clusterPKI }}
        - name: trusted-ca
          configMap:
            name: trusted-ca
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
        {{- end }}
        - name: home-runner-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
{{- end }}
